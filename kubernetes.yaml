apiVersion: v1
kind: ConfigMap
metadata:
  name: grpc-poc-envoy
data:
  cfgg: |
    static_resources:
      listeners:
      - name: listener_0
        address:
          socket_address: { address: 0.0.0.0, port_value: 8080 }
        filter_chains:
        - filters:
          - name: envoy.http_connection_manager
            config:
              codec_type: auto
              access_log:
              - name: envoy.file_access_log
                config:
                  path: "/dev/stdout"
              stat_prefix: ingress_http
              route_config:
                name: local_route
                virtual_hosts:
                - name: local_service
                  domains: ["*"]
                  routes:
                  - match: { prefix: "/services/auth" }
                    route: { cluster: grpc_poc_auth_dotnet, prefix_rewrite: "/" }
                  - match: { prefix: "/services/weather" }
                    route: { cluster: grpc_poc_weather_java, prefix_rewrite: "/" }
              http_filters:
              - name: envoy.grpc_web
              - name: envoy.router
      clusters:
      - name: grpc_poc_auth_dotnet
        connect_timeout: 30.25s
        type: strict_dns
        http2_protocol_options: {}
        upstream_connection_options:
          tcp_keepalive:
            keepalive_time: 300
        lb_policy: round_robin
        hosts: [{ socket_address: { address: grpc-poc-auth-dotnet, port_value: 5000 }}]

      - name: grpc_poc_weather_java
        connect_timeout: 30.25s
        type: strict_dns
        http2_protocol_options: {}
        upstream_connection_options:
          tcp_keepalive:
            keepalive_time: 300
        lb_policy: round_robin
        hosts: [{ socket_address: { address: grpc-poc-weather-java, port_value: 9090 }}]
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: grpc-poc-envoy
spec:
  replicas: 1
  selector:
    matchLabels:
      app: grpc-poc-envoy
  template:
    metadata:
      labels:
        app: grpc-poc-envoy
    spec:
      terminationGracePeriodSeconds: 0
      containers:
        - name: grpc-poc-envoy
          image: envoyproxy/envoy-dev:c02fe0c6084830d0d9921dbba3be2d760fbb4fe4
          imagePullPolicy: Always
          ports:
            - containerPort: 8080
          volumeMounts:
            - name: grpc-poc-envoy
              mountPath: /etc/envoy/envoy.yaml
              subPath: cfg
      volumes:
        - name: grpc-poc-envoy
          configMap:
            name: grpc-poc-envoy
---
apiVersion: v1
kind: Service
metadata:
  name: grpc-poc-envoy
spec:
  selector:
    app: grpc-poc-envoy
  ports:
    - port: 8080
      targetPort: 8080
      name: http
      protocol: TCP
---
kind: Ingress
apiVersion: networking.k8s.io/v1beta1
metadata:
  name: grpc-poc
  labels:
    app: grpc-poc
spec:
  rules:
    - host: grpc-poc-alinflorin.cloud.okteto.net
      http:
        paths:
          - path: /
            backend:
              serviceName: grpc-poc-ui-preact
              servicePort: 80
          - path: /services
            backend:
              serviceName: grpc-poc-envoy
              servicePort: 8080